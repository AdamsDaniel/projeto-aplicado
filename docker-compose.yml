services:
    frontend:
        build:
            context: ./frontend
            dockerfile: Dockerfile
        ports:
            - "3000:3000"
        depends_on:
            - api
        volumes:
            - ./frontend:/app
            - /app/node_modules
        environment:
            - CHOKIDAR_USEPOLLING=true

    api:
        build:
            context: ./backend
            dockerfile: Dockerfile
        ports:
            - "5000:5000"
        depends_on:
            - db
        environment:
            - FLASK_ENV=development
            - DATABASE_URI=mysql+pymysql://root:password@db/risk_management
        volumes:
            - ./backend:/app

    db:
        image: mysql:8.0
        container_name: mysql_db
        ports:
            - "3306:3306"
        environment:
            MYSQL_ROOT_PASSWORD: password
            MYSQL_DATABASE: risk_management
        volumes:
            - db_data:/var/lib/mysql

    nginx:
        build:
            context: ./nginx
            dockerfile: Dockerfile
        ports:
            - "80:80"
            - "443:443"
        depends_on:
            - frontend
            - api
        volumes:
            - ./nginx/nginx.conf:/etc/nginx/nginx.conf
        command:
            - nginx
            - -g
            - daemon off; 

    backup:
        build:
            context: ./database
            dockerfile: Dockerfile.backup
        volumes:
            - backup_volume:/backups
        environment:
            - MYSQL_ROOT_PASSWORD=password
        depends_on:
            - db

volumes:
    db_data:
    backup_volume: